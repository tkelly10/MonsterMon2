<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <context:property-placeholder location="classpath:MonsterMon.properties"/>

    <bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <!-- JDBC Database connection settings -->
        <property name="driverClass" value="org.apache.derby.jdbc.EmbeddedDriver"/>
        <property name="jdbcUrl" value="jdbc:derby:#{ servletContext.getRealPath('/') }/../../../lib/dbdemo"/>
        <property name="user" value="tyler"/>
        <property name="password" value="tyler"/>

        <!-- these are connection pool properties for C3P0 -->
        <property name="initialPoolSize" value="5"/>
        <property name="minPoolSize" value="5" />
        <property name="maxPoolSize" value="20" />
        <property name="maxIdleTime" value="30000" />
    </bean>

    <bean id="mySessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="myDataSource"/>
        <property name="packagesToScan" value="hibernate.entity" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.DerbyTenSevenDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>

    <bean id="myTransactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="mySessionFactory"/>
    </bean>

    <tx:annotation-driven transaction-manager="myTransactionManager"/>

    <mvc:annotation-driven/>


    <bean id="myCL" class="springxml.services.beans.CardInfo">
        <property name="color" value="${c1.cardColor}"/>
    </bean>

    <bean id="myCI" class="springxml.services.beans.CardLog">
        <property name="name" value="${c1.cardName}"/>
    </bean>


    <!-- Support for component scanning -->
    <context:component-scan base-package="notFinal"/>

    <!-- Configure Spring MVC view resolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- When our application provides a view name, Spring
         prepends the prefix and appends the suffix to it -->

        <!-- e.g. show-student-list becomes:
        /WEB-INF/view/show-student-list.jsp -->

        <!-- Basically, where to look for view files -->
        <!-- Be sure to create this folder! -->
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- Redirect any request starting with /resources/ (including subdirectories)
         to the /resources/ folder -->
    <!-- Stops static file requests from going to dispatcher servlet -->
    <!-- See https://stackoverflow.com/questions/40188743/double-asterisk-in-a-request-mapping/40202997 -->
    <mvc:resources mapping="/resources/**" location="/WEB-INF/resources/"/>
</beans>